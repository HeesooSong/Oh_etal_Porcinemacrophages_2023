# First all presence/absence venn diagrams
# 1. All samples 3 
## Comment out the wanted path 
# LCM
dirpath = "C:/Users/pc/Desktop/Dayohari/220615_DEA_Dayoung_ToSend/LCM/WithPig4_switchAB/files_3_groups/"
# MF
# dirpath = "C:/Users/pc/Desktop/Dayohari/220615_DEA_Dayoung_ToSend/MF/files_3_groups/"

LCM_present_in_nose1 = []
LCM_present_in_nose2 = []
LCM_present_in_lung = []

# "DeSeq2_Full_Table_expressed_genes.csv" is generated by DaYoung. Genes that have average counts that are below 1 are
# defined as unexpressed genes and the gene names are carefully curated by DaYoung.
line_count = 0 
with open(dirpath + "DeSeq2_Full_Table_expressed_genes.csv", "r") as full:
    for line in full:
        line = line.rstrip()
        splittedline = line.split(',')
        ens_code = splittedline[2]
        nasal1 = splittedline[15:19]
        nasal2 = splittedline[19:23]
        lung = splittedline[23:]
        if line_count == 0:
            print(nasal1)
            print(nasal2)
            print(lung)
        else:
            present_lung = False
            present_nasal1 = False
            present_nasal2 = False
            #for count in nasal1:
            #    if not count == '0':
            #        present_nasal1 = True
            #for count in nasal2:
            #    if not count == '0':
            #        present_nasal2 = True
            #for count in lung:
            #    if not count == '0':
            #        presen_lung = True

            count_sum = 0
            for count in nasal1:
                count_sum += float(count)
            avg_norm = count_sum/len(nasal1)
            if avg_norm > 1:
                present_nasal1 = True

            count_sum = 0
            for count in nasal2:
                count_sum += float(count)
            avg_norm = count_sum / len(nasal2)
            if avg_norm > 1:
                present_nasal2 = True

            count_sum = 0
            for count in lung:
                count_sum += float(count)
            avg_norm = count_sum / len(lung)
            if avg_norm > 1:
                present_lung = True


            if present_nasal1:
                LCM_present_in_nose1.append(ens_code)
            if present_nasal2:
                LCM_present_in_nose2.append(ens_code)
            if present_lung:
                LCM_present_in_lung.append(ens_code)
        line_count += 1

print(len(LCM_present_in_nose1))
print(len(LCM_present_in_nose2))
print(len(LCM_present_in_lung))

with open(dirpath + "present_in_nose1.csv", "w") as LCM_nose:
    for ens_code in LCM_present_in_nose1:
        LCM_nose.write(ens_code + "\n")

with open(dirpath + "present_in_nose2.csv", "w") as LCM_lung:
    for ens_code in LCM_present_in_nose2:
        LCM_lung.write(ens_code + "\n")

with open(dirpath + "present_in_lung.csv", "w") as LCM_lung:
    for ens_code in LCM_present_in_lung:
        LCM_lung.write(ens_code + "\n")


########### DEG 3 groups
DEG_BvsA_LCM = []
DEG_CvsA_LCM = []
DEG_CvsB_LCM = []

line_count = 0
with open(dirpath + "/DeSeq2_B_NasalSnPos_vs_A_NasalSnNeg_filtered.tsv", "r") as full:
    for line in full:
        line = line.rstrip()
        splittedline = line.split('\t')
        ens_code = splittedline[0]
        if line_count == 0:
            print(ens_code)
        else:
            DEG_BvsA_LCM.append(ens_code)
        line_count += 1

line_count = 0
with open(dirpath + "/DeSeq2_C_LungSnPos_vs_A_NasalSnNeg_filtered.tsv", "r") as full:
    for line in full:
        line = line.rstrip()
        splittedline = line.split('\t')
        ens_code = splittedline[0]
        if line_count == 0:
            print(ens_code)
        else:
            DEG_CvsA_LCM.append(ens_code)
        line_count += 1

line_count = 0
with open(dirpath + "/DeSeq2_C_LungSnPos_vs_B_NasalSnPos_filtered.tsv", "r") as full:
    for line in full:
        line = line.rstrip()
        splittedline = line.split('\t')
        ens_code = splittedline[0]
        if line_count == 0:
            print(ens_code)
        else:
            DEG_CvsB_LCM.append(ens_code)
        line_count += 1

with open(dirpath + "DEG_BvsA.csv", "w") as file:
    for ens_code in DEG_BvsA_LCM:
        file.write(ens_code + "\n")
with open(dirpath + "DEG_CvsA.csv", "w") as file:
    for ens_code in DEG_CvsA_LCM:
        file.write(ens_code + "\n")
with open(dirpath + "DEG_CvsB.csv", "w") as file:
    for ens_code in DEG_CvsB_LCM:
        file.write(ens_code + "\n")
